{
	"info": {
		"_postman_id": "24c606e8-b61e-47cb-b24e-2100edd4c9c7",
		"name": "Calculator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Sum of positive whole integers",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "846da6a0-5374-4b1c-8775-7c836ef69e1b",
						"exec": [
							"const responseJSON = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function() {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returned data is an object\", function() {",
							"  pm.expect(Object.isObject(responseJSON)).to.eql(true);",
							"});",
							"",
							"pm.test(\"Total on object should be a number\", function(){",
							"    pm.expect(responseJSON.total).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Total on object should equal 6\", function(){",
							"  pm.expect(responseJSON.total).to.eql(6);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"num1\": 2,\n\t\"num2\": 4\n}"
				},
				"url": {
					"raw": "http://localhost:4444/api/addition",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4444",
					"path": [
						"api",
						"addition"
					]
				},
				"description": "Gets sum of two, whole, positive numbers by sending numbers on body of request"
			},
			"response": []
		},
		{
			"name": "Get Sum of negative whole integers",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e410c9b0-dea0-4257-a1d3-97188ef2c17c",
						"exec": [
							"const responseJSON = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function() {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returned data is an object\", function() {",
							"  pm.expect(Object.isObject(responseJSON)).to.eql(true);",
							"});",
							"",
							"pm.test(\"Total on object should be a number\", function(){",
							"    pm.expect(responseJSON.total).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Total on object should equal 6\", function(){",
							"  pm.expect(responseJSON.total).to.eql(-6);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"num1\": -2,\n\t\"num2\": -4\n}"
				},
				"url": {
					"raw": "http://localhost:4444/api/addition",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4444",
					"path": [
						"api",
						"addition"
					]
				},
				"description": "Gets sum of two, whole, negative numbers by sending numbers on body of request"
			},
			"response": []
		},
		{
			"name": "Get Sum of decimal integers",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "742d102d-c1b8-4a05-8ff3-d2658369c719",
						"exec": [
							"const responseJSON = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function() {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returned data is an object\", function() {",
							"  pm.expect(Object.isObject(responseJSON)).to.eql(true);",
							"});",
							"",
							"pm.test(\"Total on object should be a number\", function(){",
							"    pm.expect(responseJSON.total).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Total on object should equal 6\", function(){",
							"  pm.expect(responseJSON.total).to.eql(6);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"num1\" : 3.7,\n\t\"num2\": 2.3\n\t\n}"
				},
				"url": {
					"raw": "http://localhost:4444/api/addition",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4444",
					"path": [
						"api",
						"addition"
					]
				},
				"description": "Gets sum of two decimal numbers, by sending numbers on body of request"
			},
			"response": []
		},
		{
			"name": "Get Sum Error for strings",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "28947532-e77e-4b5e-ba1a-feb0851ecaf1",
						"exec": [
							"const responseJSON = pm.response.json();",
							"",
							"pm.test(\"Status code is 400\", function() {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Returned data is an object\", function() {",
							"    pm.expect(Object.isObject(responseJSON)).to.eql(true);",
							"});",
							"",
							"pm.test(\"Error on object should be a string\", function(){",
							"    pm.expect(responseJSON.error).to.be.a('string')",
							"});",
							"",
							"pm.test(\"Returned error message is expected\", function() {",
							"   pm.expect(responseJSON.error).to.eql(\"Invalid integer type. Please use two numbers as parameters to calculate sum\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"num1\": \"lkioih\",\n\t\"num2\": 3\n}"
				},
				"url": {
					"raw": "http://localhost:4444/api/addition",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4444",
					"path": [
						"api",
						"addition"
					]
				},
				"description": "Makes sure that error is returned if data types of num1 and num2 are strings"
			},
			"response": []
		},
		{
			"name": "Get Sum Error for one parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5a971120-2b97-4a28-9c05-726597c8e200",
						"exec": [
							"const responseJSON = pm.response.json();",
							"",
							"pm.test(\"Status code is 400\", function() {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Returned data is an object\", function() {",
							"    pm.expect(Object.isObject(responseJSON)).to.eql(true);",
							"});",
							"",
							"pm.test(\"Error on object should be a string\", function(){",
							"    pm.expect(responseJSON.error).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Returned error message is expected\", function() {",
							"   pm.expect(responseJSON.error).to.eql(\"Invalid integer type. Please use two numbers as parameters to calculate sum\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"num1\": 1\n}"
				},
				"url": {
					"raw": "http://localhost:4444/api/addition",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4444",
					"path": [
						"api",
						"addition"
					]
				},
				"description": "Makes sure that error is returned if only one parameter is sent to the function"
			},
			"response": []
		}
	]
}